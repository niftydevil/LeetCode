# 给定一个整数数组 nums 和一个目标值 target，请你在该数组中找出和为目标值的那两个整数，并返回他们的数组下标。
# 你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍

# 第一种写法
class Solution():
    def twoSum(self, nums, target):
        lens = len(nums)
        for i in range(0, lens-1):
            for j in range(i+1, lens):
                if nums[i] + nums[j] == target:
                    return i, j

if __name__ == "__main__":
    nums = [3,2,4]
    target = 6
    solution = Solution()
    print(solution.twoSum(nums, target))
   
   
   
# 第二种写法
def towSum(nums, target):
    lens = len(nums)
    print(lens)
    j = -1
    for i in range(1, lens):
        temp = nums[:i]
        if(target-nums[i]) in temp:
            j = temp.index(target-nums[i])
            break

    if j >= 0:
        print(j, i)
        # return [j,i]
        
if __name__ == "__main__":
    nums = [1,2,3,4,5,6]
    target = 6
    towSum(nums, target)
    

# 来源：力扣（LeetCode）
# 链接：https://leetcode-cn.com/problems/two-sum
# 著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。
    
    
